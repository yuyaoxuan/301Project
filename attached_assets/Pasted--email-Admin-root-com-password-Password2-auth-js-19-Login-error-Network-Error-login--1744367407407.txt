{email: 'Admin@root.com', password: '!Password2'}
auth.js:19 
 Login error: Network Error
login	@	auth.js:19
await in login		
handleLogin	@	LoginPage.vue:55
(anonymous)	@	LoginPage.vue:9
LoginPage.vue:70 
 Login failed: 
AxiosError {message: 'Network Error', name: 'AxiosError', code: 'ERR_NETWORK', config: {…}, request: XMLHttpRequest, …}
code
: 
"ERR_NETWORK"
config
: 
adapter
: 
Array(3)
0
: 
"xhr"
1
: 
"http"
2
: 
"fetch"
length
: 
3
[[Prototype]]
: 
Array(0)
allowAbsoluteUrls
: 
true
baseURL
: 
"http://0.0.0.0:8080"
data
: 
"{\"email\":\"Admin@root.com\",\"password\":\"!Password2\"}"
env
: 
Blob
: 
ƒ Blob()
FormData
: 
ƒ FormData()
[[Prototype]]
: 
Object
headers
: 
AxiosHeaders
Accept
: 
"application/json, text/plain, */*"
Content-Type
: 
"application/json"
clear
: 
(...)
concat
: 
(...)
constructor
: 
(...)
delete
: 
(...)
get
: 
(...)
getAccept
: 
(...)
getAcceptEncoding
: 
(...)
getAuthorization
: 
(...)
getContentLength
: 
(...)
getContentType
: 
(...)
getUserAgent
: 
(...)
has
: 
(...)
hasAccept
: 
(...)
hasAcceptEncoding
: 
(...)
hasAuthorization
: 
(...)
hasContentLength
: 
(...)
hasContentType
: 
(...)
hasUserAgent
: 
(...)
normalize
: 
(...)
set
: 
(...)
setAccept
: 
(...)
setAcceptEncoding
: 
(...)
setAuthorization
: 
(...)
setContentLength
: 
(...)
setContentType
: 
(...)
setUserAgent
: 
(...)
toJSON
: 
(...)
toString
: 
(...)
Symbol(Symbol.toStringTag)
: 
(...)
[[Prototype]]
: 
Object
maxBodyLength
: 
-1
maxContentLength
: 
-1
method
: 
"post"
timeout
: 
0
transformRequest
: 
Array(1)
0
: 
ƒ transformRequest(data, headers)
length
: 
1
[[Prototype]]
: 
Array(0)
transformResponse
: 
Array(1)
0
: 
ƒ transformResponse(data)
length
: 
1
[[Prototype]]
: 
Array(0)
transitional
: 
clarifyTimeoutError
: 
false
forcedJSONParsing
: 
true
silentJSONParsing
: 
true
[[Prototype]]
: 
Object
url
: 
"/api/users/login"
validateStatus
: 
ƒ validateStatus(status)
xsrfCookieName
: 
"XSRF-TOKEN"
xsrfHeaderName
: 
"X-XSRF-TOKEN"
[[Prototype]]
: 
Object
message
: 
"Network Error"
name
: 
"AxiosError"
request
: 
XMLHttpRequest {onreadystatechange: null, readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, …}
stack
: 
"AxiosError: Network Error\n    at XMLHttpRequest.handleError (http://localhost:5173/node_modules/.vite/deps/axios.js?v=de7a9879:1580:14)\n    at Axios.request (http://localhost:5173/node_modules/.vite/deps/axios.js?v=de7a9879:2108:41)\n    at async Object.login (http://localhost:5173/src/services/auth.js:8:24)\n    at async Proxy.handleLogin (http://localhost:5173/src/views/LoginPage.vue:21:26)"
[[Prototype]]
: 
Error
handleLogin	@	LoginPage.vue:70
await in handleLogin		
(anonymous)	@	LoginPage.vue:9
